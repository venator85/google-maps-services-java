import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
  }
}


plugins {
    id 'com.github.ben-manes.versions' version '0.21.0'
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

group = 'com.google.maps'
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

dependencies {
    compileOnly 'com.google.appengine:appengine-api-1.0-sdk:1.9.71'
    api 'com.squareup.okhttp3:okhttp:3.12.2'
    api 'com.google.code.gson:gson:2.8.5'
    api 'org.threeten:threetenbp:1.3.8'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.25.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.14.0'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.7'
    testImplementation 'org.slf4j:slf4j-simple:1.7.25'
    testImplementation 'org.apache.commons:commons-lang3:3.8.1'
    testImplementation 'org.json:json:20180813'
}

task updateVersion(type: Copy) {
    from('src') into "build/filtered/src"
    filter(ReplaceTokens, tokens: [VERSION: project.version])
}
compileJava.source = "build/filtered/src/main/java"
compileJava.dependsOn updateVersion

compileJava {
    options.compilerArgs << "-Xlint:deprecation"
}

compileTestJava {
    options.compilerArgs << "-Xlint:deprecation"
}

// Propagate API Key system properties to test tasks
tasks.withType(Test) {
    systemProperty 'api.key', System.getProperty('api.key')
    systemProperty 'client.id', System.getProperty('client.id')
    systemProperty 'client.secret', System.getProperty('client.secret')
}

javadoc {
    exclude '**/internal/**'
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

jacoco {
    toolVersion = "0.8.2" // non-default version 0.8.2 required for OpenJDK 11 compatibility
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

publishing {
    repositories {
        maven {
            url = "$buildDir/repo"
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId 'google-maps-services-android'
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Java Client for Google Maps Services'
                description = 'Use the Google Maps API Web Services in Java! ' +
                    'https://developers.google.com/maps/documentation/webservices/'
                url = 'https://github.com/googlemaps/google-maps-services-java'

                scm {
                    url = 'scm:git@github.com:googlemaps/google-maps-services-java.git'
                    connection = 'scm:git@github.com:googlemaps/google-maps-services-java.git'
                    developerConnection = 'scm:git@github.com:googlemaps/google-maps-services-java.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'markmcd'
                        name = 'Mark McDonald'
                        url = 'https://google.com/+MarkMcDonald0'
                    }
                    developer {
                        id = 'domesticmouse'
                        name = 'Brett Morgan'
                        url = 'https://google.com/+BrettMorgan'
                    }
                    developer {
                        id = 'broady'
                        name = 'Chris Broadfoot'
                        url = 'https://google.com/+ChristopherBroadfoot'
                    }
                }
            }
        }
    }
}
